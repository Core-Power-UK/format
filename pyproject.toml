[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.0"]

[project]
dependencies = [
  "add-trailing-comma==3.1.0",
  "black==23.9.1",
]
description = "Run custom formatting"
name = "format"
requires-python = ">=3.8"
version = "1.0.2"

[project.scripts]
format = "format:main"

[tool.mypy]
exclude = "env"
python_version = "3.11"
strict = true

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
ignore = [
  "ANN101",  # Ignore missing type annotation for self
  "D106",  # Requiring doc strings in subclasses results in duplicated doc strings
  "D401",  # Ignore non-imperative mood in the first line of a doc string
  "FBT",  # Ignore flake8-boolean-trap - Allow boolean default values
  "FIX002",  # Items to be fixed should be marked as TODO
  "PLR0913",  # Ignore too many arguments passed to a function
  "PLR2004",  # Ignore magic value comparison
  "RUF012",  # Ignore mutable class defaults check
  "S101",  # Allow asserts
  "T201",  # Allow print statements
]
select = ["ALL"]  # Enable all ruff plugins
unfixable = [
  "ERA001",  # Disable autofix for commented-out code
  "F401",  # Disable autofix for unused imports
  "F841",  # Disable autofix for unused variables
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.isort]
combine-as-imports = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "D104",  # Ignore - "Missing docstring in public package" for init files
]

[tool.ruff.lint.pydocstyle]
convention = "google"
